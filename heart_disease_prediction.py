# -*- coding: utf-8 -*-
"""Hear Disease prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PNsQi9NVMEQA4pOihXkPKjpppiUP_xV6

# **Import dependencies**
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""**Data collection and processing**"""

heart_data = pd.read_csv('/content/drive/MyDrive/data1.csv')

heart_data.head()

heart_data.tail()

heart_data.shape

heart_data.info()

heart_data.isnull().sum()

heart_data.describe()

heart_data['target'].value_counts()
# checking the distribution of target variable

"""1--------->Defective heart
0---------> Healthy heart
"""

# spilliting features and target
X = heart_data.drop(columns='target', axis=1)
Y = heart_data['target']

print(X)

print(Y)

"""**Spilitting the data into training data & test data **

"""

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""# ***Model Training***"""

model = LogisticRegression()

model.fit(X_train, Y_train)

# Accuracy Score
X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy on training data : ', training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print("Accuracy on test data : ", test_data_accuracy)

"""# **Building a predictive system**"""

# Define input data as a list (ordered collection)
input_data = [41, 0, 1, 130, 204, 0, 0, 172, 0, 1.4, 2, 0, 2]

# Convert input data to a numpy array
input_data_as_numpy_array = np.asarray(input_data)

# Reshape the numpy array to match model's expected input shape
input_data_reshaped = input_data_as_numpy_array.reshape(1, -1)

# Make predictions (ensure model is trained and available)
prediction = model.predict(input_data_reshaped)
print(prediction)

if(prediction[0]== 0) :
  print('Person does not have a heart disease')
else :
  print('Person has a heart disease')

